services:
  orchestrator:
    container_name: orchestrator
    build:
      context: ./agent_orchestrator
      dockerfile: Dockerfile
    ports:
      - "4000:8000"
    volumes:
      - ./agent_orchestrator:/app
    depends_on:
      - agent_service
      - kafka
      - ollama
    networks:
      - agentic-net

  agent_service:
    container_name: agent_service
    build:
      context: ./agent_service
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      KAFKA_BROKER: kafka:9092
      TOPIC_IN: agent-tasks-inbound
      TOPIC_OUT: agent-tasks-completed
      OLLAMA_BASE_URL: http://ollama:11434
    depends_on:
      - kafka
      - ollama
    networks:
      - agentic-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - agentic-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_WAIT_FOR_ZOOKEEPER: "yes"
    networks:
      - agentic-net

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-models:/root/.ollama
    restart: unless-stopped
    networks:
      - agentic-net

volumes:
  ollama-models:

networks:
  agentic-net:
    driver: bridge
